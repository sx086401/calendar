{"version":3,"sources":["assets/keyboard_arrow_left.svg","assets/keyboard_arrow_right.svg","containers/calendar/CalendarCell.tsx","containers/calendar/TodaySchedule.tsx","containers/calendar/Calendar.tsx","containers/index/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["useStyle","makeStyles","cell","display","flexWrap","cursor","height","width","border","isToday","borderRadius","backgroundColor","textAlign","marginTop","lineHeight","maxHeight","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","padding","dialog","color","textArea","resize","outline","fontSize","button","CalendarCell","props","date","calendarContext","useContext","CalendarContext","day","getDate","isTodayCell","classes","useState","showDialog","toggleDialog","note","updateNote","incomingNote","updateIncomingNote","useEffect","todaySchedule","onClose","className","onClick","Typography","variant","align","Dialog","open","DialogTitle","DialogContent","dividers","onChange","e","target","value","defaultValue","placeholder","DialogActions","Button","updateTodaySchedule","root","justifyContent","marginLeft","overflowWrap","TodaySchedule","Box","xs","md","title","calendar","margin","borderCollapse","header","headerCell","tableCell","borderTop","borderBottom","Banner","styled","defaultContext","React","createContext","Calendar","now","Date","current","setCurrent","startDateOfMonth","startOfMonth","startDayOfMonth","getDay","startDateOfCalendar","addDays","finalDateOfMonth","lastDayOfMonth","finalDayOfMonth","weeks","dates","result","i","length","push","slice","chunkWeeks","startDate","endDate","currentDate","getDates","Provider","Grid","container","spacing","item","src","keyboardArrowLeft","addMonths","alt","keyboardArrowRight","toLocaleDateString","year","month","Table","TableHead","TableRow","map","head","TableCell","TableBody","week","row","index","textDecoration","Index","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f5d3846.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/keyboard_arrow_left.b1354c49.svg\";","export default __webpack_public_path__ + \"static/media/keyboard_arrow_right.b5001a5c.svg\";","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core'\nimport { getDate, isToday } from 'date-fns'\nimport React, { ChangeEvent, useContext, useEffect, useState } from 'react'\nimport { CalendarContext } from './Calendar'\n\nconst useStyle = makeStyles({\n  cell: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    cursor: 'pointer',\n    height: '100px',\n    width: '100%',\n    border: ({ isToday }: StyleProps) => isToday ? '1px solid' : 'none',\n    borderRadius: '5%',\n    '&:hover': {\n      backgroundColor: 'rgb(139, 144, 152, 0.5)'\n    },\n    '& .title': {\n      textAlign: 'center',\n      marginTop: 10,\n      width: '100%',\n      height: 10\n    },\n    '& .note': {\n      width: '100%',\n      lineHeight: '1.4em',\n      maxHeight: '2.8em',\n      display: '-webkit-box',\n      WebkitLineClamp: 2,\n      WebkitBoxOrient: 'vertical',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      padding: 1,\n    }\n  },\n  dialog: {\n    backgroundColor: 'rgb(244, 244, 244, 0.8)',\n    overflow: 'hidden',\n    '& .content': {\n      backgroundColor: 'rgb(39, 44, 52, 0.7)',\n      color: 'white'\n    }\n  },\n  textArea: {\n    resize: 'none',\n    outline: 'none',\n    backgroundColor: 'rgb(39, 44, 52, 0.1)',\n    color: 'white',\n    fontSize: 18,\n    width: 380,\n    height: 300,\n  },\n  button: {\n    color: 'white'\n  }\n})\n\ninterface Props {\n  date: Date\n}\n\ninterface StyleProps {\n  isToday: boolean\n}\n\nexport default function CalendarCell(props: Props) {\n  const { date } = props\n  const calendarContext = useContext(CalendarContext)\n  const day = getDate(date)\n  const isTodayCell = isToday(date)\n  const classes = useStyle({ isToday: isTodayCell })\n  const [showDialog, toggleDialog] = useState<boolean>(false)\n  const [note, updateNote] = useState<string>('')\n  const [incomingNote, updateIncomingNote] = useState<string>('')\n\n  useEffect(() => {\n    if (isTodayCell) {\n      updateNote(calendarContext.todaySchedule)\n    }\n  }, [isTodayCell, calendarContext, updateNote])\n\n  const onClose = () => {\n    toggleDialog(false)\n  }\n\n  const onChangeNote = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    updateIncomingNote(e.target.value)\n  }\n\n  const onConfirm = () => {\n    if (isTodayCell) {\n      calendarContext.updateTodaySchedule(incomingNote)\n    }\n    updateNote(incomingNote)\n    onClose()\n  }\n\n  return <>\n    <div className={classes.cell} onClick={() => toggleDialog(true)}>\n      <div className={'title'}>{day}</div>\n      <Typography variant=\"body1\" align='center' className={'note'}>{note}</Typography>\n    </div>\n    <Dialog className={classes.dialog} open={showDialog}>\n      <DialogTitle className='content'>{day}'s schedule</DialogTitle>\n      <DialogContent className='content' dividers>\n        <textarea className={classes.textArea} onChange={onChangeNote} defaultValue={note} placeholder='Write some notes here.'></textarea>\n      </DialogContent>\n      <DialogActions className='content'>\n        <Button className={classes.button} onClick={onClose}>cancel</Button>\n        <Button className={classes.button} onClick={onConfirm}>confirm</Button>\n      </DialogActions>\n    </Dialog>\n  </>\n}\n","import { Box, makeStyles } from '@material-ui/core'\nimport React, { useContext } from 'react'\nimport { CalendarContext } from './Calendar'\n\nconst useStyle = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    color: 'white',\n    marginTop: 20,\n    marginLeft: 10,\n    '& .title': {\n      width: '100%',\n      textAlign: 'center',\n      fontSize: 'xx-large',\n    },\n    '& .content': {\n      marginTop: 10,\n      fontSize: 'x-large',\n      overflowWrap: 'anywhere',\n    }\n  }\n})\n\nexport default function TodaySchedule() {\n  const calendarContext = useContext(CalendarContext)\n  const classes = useStyle()\n\n  return (\n    <Box className={classes.root} display={{ xs: 'none', md: 'block'}}>\n      <div className='title'>Today schedule</div>\n      <div className='content'>{calendarContext.todaySchedule}</div>\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\nimport { Grid, makeStyles, styled, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { getDay, startOfMonth, lastDayOfMonth, addMonths } from 'date-fns'\nimport { addDays } from 'date-fns/esm'\nimport keyboardArrowLeft from '../../assets/keyboard_arrow_left.svg'\nimport keyboardArrowRight from '../../assets/keyboard_arrow_right.svg'\nimport CalendarCell from './CalendarCell'\nimport TodaySchedule from './TodaySchedule'\n\nconst useStyle = makeStyles({\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    fontSize: 'xxx-large',\n    color: 'white',\n  },\n  calendar: {\n    backgroundColor: 'rgb(139, 144, 152, 0.5)',\n    border: 'solid 1px',\n    margin: 10,\n    padding: 10,\n    borderCollapse: 'collapse',\n    borderRadius: 4,\n    overflow: 'hidden',\n  },\n  header: {\n    backgroundColor: 'rgb(59, 47, 52, 0.5)',\n    color: 'white',\n    cursor: 'default',\n  },\n  headerCell: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  tableCell: {\n    color: 'white',\n    padding: 0,\n    borderTop: 'solid 1px rgb(224, 224, 224)',\n    borderBottom: 'none'\n  }\n})\n\nconst Banner = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: 5,\n  padding: 5,\n  '& .img': {\n    '&:hover': {\n      cursor: 'pointer',\n    }\n  }\n})\n\nfunction getDates(startDate: Date, endDate: Date): Date[] {\n  let dates = []\n  let currentDate = startDate\n  while (currentDate <= endDate) {\n    dates.push(currentDate)\n    currentDate = addDays(currentDate, 1)\n  }\n  return dates\n}\n\nfunction chunkWeeks(dates: Date[]): Array<Date[]> {\n  let result = []\n  for (let i = 0; i < dates.length; i += 7) {\n    result.push(dates.slice(i, i + 7))\n  }\n  return result\n}\n\ninterface contextValue {\n  todaySchedule: string,\n  updateTodaySchedule: any\n}\n\nconst defaultContext: contextValue = { todaySchedule: '', updateTodaySchedule: null}\n\nexport const CalendarContext = React.createContext(defaultContext)\n\nexport default function Calendar() {\n  const classes = useStyle()\n  const tableHead = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  const now = new Date()\n  const [current, setCurrent] = useState<Date>(now)\n  const [todaySchedule, updateTodaySchedule] = useState('example note')\n\n  const startDateOfMonth = startOfMonth(current)\n  const startDayOfMonth = getDay(startDateOfMonth)\n  const startDateOfCalendar = addDays(startDateOfMonth, -startDayOfMonth)\n  const finalDateOfMonth = lastDayOfMonth(current)\n  const finalDayOfMonth = getDay(finalDateOfMonth)\n  const finalDayOfCalendar = addDays(finalDateOfMonth, 6-finalDayOfMonth)\n\n  const dates = getDates(startDateOfCalendar, finalDayOfCalendar)\n  const weeks = chunkWeeks(dates)\n\n  const previousMonth = () => {\n    setCurrent(addMonths(current, -1))\n  }\n\n  const nextMonth = () => {\n    setCurrent(addMonths(current, 1))\n  }\n\n  return (\n    <CalendarContext.Provider value={{ todaySchedule, updateTodaySchedule }}>\n      <Grid container spacing={0}>\n        <Grid item md={2}>\n          <TodaySchedule></TodaySchedule>\n        </Grid>\n        <Grid item xs={12} md={9}>\n          <Banner>\n            <img className={'img'} src={keyboardArrowLeft} onClick={previousMonth} alt={keyboardArrowRight}></img>\n            <div className={classes.title}>{current.toLocaleDateString('en-US', {year: 'numeric', month: 'long'})}</div>\n            <img className={'img'} src={keyboardArrowRight} onClick={nextMonth} alt={keyboardArrowRight}></img>\n          </Banner>\n          <Table className={classes.calendar}>\n            <TableHead className={classes.header}>\n              <TableRow>\n                {tableHead.map(head => <TableCell className={classes.headerCell} key={head}>{head}</TableCell>)}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {weeks.map((week, row) =>\n                <TableRow key={row}>\n                  {week.map((date, index) =>\n                    <TableCell className={classes.tableCell} key={index}><CalendarCell date={date}/></TableCell>\n                  )}\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid item md={1}></Grid>\n      </Grid>\n    </CalendarContext.Provider>\n  )\n}\n","import { Button, makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst useStyle = makeStyles({\n  index: {\n    textAlign: 'center',\n    marginTop: 300,\n    '& .title': {\n      fontSize: 60,\n      color: 'white'\n    },\n    '& .link': {\n      textDecoration: 'none'\n    },\n    '& .button': {\n      fontSize: 20,\n      backgroundColor: 'rgb(139, 144, 152, 0.5)',\n      color: 'white',\n    }\n  }\n})\n\nexport default function Index() {\n  const classes = useStyle()\n\n  return (\n    <div className={classes.index}>\n      <h1 className='title'>My Calendar</h1>\n      <Link className='link' to='/calendar'>\n        <Button className='button'>Start</Button>\n      </Link>\n    </div>\n  )\n}\n","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport Calendar from './containers/calendar/Calendar';\nimport Index from './containers/index';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path='/calendar'>\n          <Calendar></Calendar>\n        </Route>\n        <Route path='/'>\n          <Index></Index>\n        </Route>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}